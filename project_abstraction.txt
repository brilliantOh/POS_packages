#python으로 POS 프로그래밍

#GUI
[주문/계산]
상단: 현재일시, 근무자ID, 메인화면
우측: 분류, 메뉴(가격), 공지사항 배너
하단(우측): 현금결제, 카드결제, 포장, 주문, 반품, 영수증, (복합결제, 금고열기, 주문보류)
좌측: 주문현황(합계금액)
하단(좌측): 수량변경, +-, 지정취소, 전체취소
관리 tab
오른쪽: 현재 시재, 중도입금/출금
왼쪽: 주문결제내역, 반품, 매출합계

#구현할 기능
주문 tab
수량 mul 가격 = 합계금액 sum
메뉴 입력시 주문현황에 중복 없이 수량 증가
주문현황에서 메뉴별 수량 증가/감소/취소
전체취소/결제완료 시 주문현황 clear
(HOT/ICE) 선택?
(고도화)메뉴별 커스텀 옵션(ex 샷추가, 휘핑크림 많이)

주문완료(?) pop-up
현금결제시 받은 금액 입력 후 거스름돈 sub

관리 tab
부팅시 준비금(시재) 입력
현금결제/반품시 현재 시재 변동
종료시 결제목록, 매출합계, 시재 clear
주문결제내역 선택 후 전체반품/부분반품


#0116
부팅 시
근무자ID/PW 입력 후 로그인(default set)
메인화면: 공지사항,주문/계산,영업관리,관리,정산,근무자변경,설정,종료

영업관리: 오픈(현재일시,근무자ID,시재), 마감(영업시간,근무자ID,시재), 근무자변경
근무자변경: 인수금액(시재) 입력, 근무자ID/PW 입력 후 로그인, 인계금액(시재) 입력
정산: 중도입금/출금, 입출금내역, 매출집계
관리: 근무자관리, 메뉴관리

#0123
-피드백: 메뉴 DB를 따로 관리-> 프로그램에서 참조/호출하여 사용

#0131
메뉴 버튼->QPushbutton으로 구현?(click count?)
수량 카운트 ->label로 일단 구현? 버튼으로 구현?
전체 창 ->QDialog 대화창 구성?
inputdialog(수량변경), Qmessagebox(결제팝업)
pyinstaller 이용해서 python 없는 환경에서도 exe로 실행되도록

#0204
메뉴: QPushbutton
수량: QLabel
수량 +-x: QPushbutton
수량변경: QPushbutton -> QInputDialog

#0206
menu1_count 변수 정의
메뉴 선택시 menuClicked를 call해서 수량label이 바뀌도록 함
menuAdd, menuMinus, menuInputDialog, menuCancel 추가
메뉴마다 5개의 함수를 정의해야 해서 메뉴수X5의 함수가 생기는데 이렇게 하는 게 맞을까?
수량 0일 때 해당 메뉴 위젯을 주문현황에서 보이지 않게 하는 기능?
+ 수량이 0보다 클 때 해당 메뉴 위젯을 주문현황에 표시하는 기능?

#0211
Clicked, Add, Minus, InputDialog, Cancel
함수는 이렇게 5개만 정의하고 무슨 메뉴 때문에 call됐는지 파악 가능하도록 해야 할듯?
-> 메뉴가 인스턴스인 클래스에서 넘겨주는 방법?
버튼 clicked call할 때 nonetype으로 넘어가는 문제 발생

#0212
groupbox와 gridlayout 적용해서 UI 변경
self.menuClicked call할 때 lambda에 태우니 TypeError 해결됨.
그런데 for문으로 간략하게 만들 수 있을 거 같은데...왜인지 안 됨.
메뉴마다 clicked.connect문을 써줘서 일단 skip. 메뉴 늘면 코드 늘어남(1)
menu_list에 메뉴 클래스 인스턴스들을 담았음
initialize.py -> menu_excel, Menu cls, instance들을 정의한 모듈
그런데 모든 메뉴 인스턴스들을 변수 정의하고 load해야 할까? 메뉴 늘면 코드 늘어남(2)
클래스 메서드로 총액 계산하는 기능 추가해야 함

#0213
전체 수량, 전체 금액 정의하려면 전체 인스턴스의 특정 속성을 불러와야 하는데 일단 불가능.
qt_canceled를 qt_changed 기능에 통합

#0214
Menu class 함수 이름 살짝 변경
Total class에 전체 수량, 전체 금액 계산하도록
그런데 두번씩 계산되고 있음

#0217
전체 수량, 합계 금액 두번씩 계산되던 오류 해결
menu_qt 함수 내에서 메뉴 금액, 전체 수량, 합계 금액 계산 함수 call하도록 변경
label settext가 자주 쓰이니 분리해서 함수로 만들고 btn click시 call하도록
menu_excel 대신 menu_list를 참조하도록 살짝 변경
Total class 내 qt, tot list를 정의해서 sum하도록
수량 직접입력도 menu_qt로 call되다보니 수량이 그냥 더해지기만 해서 변경 필요

#0218
수량 직접입력 함수(menu_qt_input) 추가
메뉴 금액 계산시(menu_tot) for문으로 모든 메뉴 계산하도록 변경 less efficient?
lbltxt_changed도 i를 인자로 받았는데 삭제하고 for문으로 모든 메뉴 ~도록 변경 less efficient?
전체 취소를 일단 menu class에 구현했는데 total 내가 아니라 뭔가 부자연스러움 일단 기능에는 문제 없음

#0219
현금결제, 카드결제 GUI 구현
Sales 클래스에 주문내역을 order_df로 받고 history_df에 concatenate하도록 함

#0220
주문내역 df에 주문일시 추가
결제금액 0원일 경우 결제 불가하게 현금/카드결제 앞에 if문 삽입하고 msgbox 띄우는 함수 call
영수증출력 pushbutton 추가
dataframe 출력을 위한 tableview, tablewidget 공부
tabwidget으로 주문/결제, 내역조회 tab을 분리
pyqtSlot으로 실행속도 빠르게
주문내역 추가시 내역조회 tab에 pushbutton 추가 미구현

#0221
현재 일시 update 미구현
stable과 dev 분리
주문현황 편의를 위한 order_now_list 정의
확장성을 위해 Mainwindow 내 widget으로 배치
주문현황을 tablewidget으로 구현중
편의를 위한 menu_qt_changed 함수 추가(수량 변동시 call해서 금액 계산 call 등 처리)
그런데 order_now와 menu_list의 len도 idx도 달라서 일괄 처리가 불가해보임

#0224
함수, 변수 이름 변경 order_now -> cart
cart_dic으로 현재 주문정보를 저장(메뉴명:수량)
cart_dic의 key와 value를 리스트로 두고 table에서 참조하도록
cellclicked 시 IndexError: list index out of range

#0225
Total과 Cart class 분리
cart_dic의 key를 name 대신 Menu instance로 받도록 수정
table에 btn 추가하고 수량 변경 함수 연결
lambda 이용해서 for문에 clicked.connect문 간결하게 수정
qt_changed 시 call할 함수 순서 변경해서 오류 없도록 수정
전체수량, 총액 label 추가

#0226
orderSave : order_df -> order history.xlsx 저장
btn click -> listwidget clear & addItem (order_idx)
list가 별로여서 table로 수정할 계획
그런데 같은 tab이 아니라 payComplete에 연결해서 결제시마다 update가 불가능해보임

#review
camel case X, 변수와 클래스는 명사, 함수는 동사로 작성
객체지향적으로 프로그래밍. 메뉴가 늘 때마다 DB에만 추가하고 코드 수정 없도록.
추가 기능 구현도 물론 의미 있지만 큰 공부가 될 것 같지는 않음
그보다 내부 자료구조 수정이 기능 추가는 없더라도 공부는 될 것임
인스턴스를 만들어주는 클래스 생성
리스트에 str(ex 아메리카노)이 들어오면 해당 수량 카운트하는 식으로 하고
그 리스트를 다른 함수가 참조하는 걸로 해도 괜찮을 듯

#0305
Class POS_calculator 생성
메뉴 str을 받으면 인스턴스의 cart_list에 append하고 수량은 count로 계산
table에 중복 없이 추가 미구현

#0306
table에 중복 없이 추가 구현

#0309
Class Receipt 생성
df로 주문내역을 받고 excel로 save
index가 0인 내역만 들어가는 오류 발생

#0312
주문내역 저장 및 조회 기능 구현
excel에서 list로 먼저 불러오고 table에서 참조하므로 다소 비효율적
data가 늘어났을 때 문제 가능성

#0318
주문내역 저장 및 조회 기능 오류 수정
매출집계 탭 생성 및 조회기간(qdate) 설정
기간 매출 집계할 class 생성

#0319
timedelta를 이용해 시작일-종료일 차이만큼 for loop
xlsx에서 조회일의 데이터를 df로 읽고 추출해서 주문건수,주문수량,주문금액 리스트로 저장
리스트를 불러와서 matplotlib로 뿌릴 예정